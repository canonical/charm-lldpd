# Copyright 2024 Canonical Ltd.
# See LICENSE file for licensing details.

[tox]
skipsdist=True
skip_missing_interpreters = True
envlist = lint, static-charm, static-lib, unit

[vars]
src_path = {toxinidir}/src
tst_path = {toxinidir}/tests
all_path = {[vars]src_path} {[vars]tst_path}

[testenv]
basepython=python3.6
setenv =
    PYTHONPATH = {toxinidir}:{toxinidir}/lib:{[vars]src_path}
    PYTHONBREAKPOINT=ipdb.set_trace
    PY_COLORS=1
passenv =
    PYTHONPATH
    HOME
    PATH
    CHARM_BUILD_DIR
    MODEL_SETTINGS
    HTTP_PROXY
    HTTPS_PROXY
    NO_PROXY

[testenv:fmt]
description = Apply coding style standards to code
deps =
    black
commands =
    black {[vars]all_path}

[testenv:lint]
description = Check code against coding style standards
deps =
    black
    codespell
commands =
    codespell --skip .git --skip .tox --skip build --skip lib --skip venv --skip .mypy_cache {toxinidir}
    black --check --diff {[vars]all_path}

[testenv:static-charm]
description = Run static analysis checks for charm
deps =
    pyright
    -r{toxinidir}/requirements.txt
commands =
    pyright {[vars]src_path} {posargs}

[testenv:static-lib]
description = Run static analysis checks for lib
deps =
    pyright
    ops
    jinja2
commands =
    pyright --pythonversion 3.6 {[vars]src_path} {posargs}
    # FIXME: there's no LIB{PATCH,API} in src/charm.py, should there be?
    # /usr/bin/env sh -c 'for m in $(git diff main --name-only {[vars]src_path}); do if ! git diff main $m | grep -q "+LIBPATCH\|+LIBAPI"; then echo "You forgot to bump the version on $m!"; exit 1; fi; done'
allowlist_externals = /usr/bin/env

[testenv:unit]
description = Run unit tests
deps =
    pytest
    coverage[toml]
    -r{toxinidir}/requirements.txt
commands =
    coverage run \
        --source={[vars]src_path} \
        -m pytest -v --tb native -s {posargs} {[vars]tst_path}/unit
    coverage report

[testenv:integration]
# To support bionic, juju should be below libjuju 3.0
description = Run integration tests
deps =
    juju < 3.0.0
    pytest
    pytest-operator
    pytest-order
    -r{toxinidir}/requirements.txt
commands =
    pytest -vv --tb native --log-cli-level=INFO --color=yes -s {posargs} {[vars]tst_path}/integration
